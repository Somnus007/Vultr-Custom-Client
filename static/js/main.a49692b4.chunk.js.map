{"version":3,"sources":["constants/ActionTypes.js","redux/reducers/accountReducer.js","redux/reducers/homeReducer.js","locales/en-US.js","locales/index.js","locales/zh-CN.js","redux/reducers/persistReducer.js","redux/reducers/commonReducer.js","redux/reducers/index.js","constants/Url.js","services/index.js","redux/sagas/accountSaga.js","redux/sagas/commonSaga.js","redux/sagas/index.js","redux/index.js","routes/routesMap.js","layouts/BlankLayout.js","layouts/MainLayout.js","components/LanguageSwitch/LanguageSwitch.js","layouts/index.js","components/GlobalLoading/GlobalLoading.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["CommonType","SET_COMMON_STATE","CHANGE_LOCALE","AccountType","SET_ACCOUNT_STATE","LOGIN","LOGOUT","HomeType","SET_HOME_STATE","MOVIE_LIST","PersistType","SET_PERSIST_STATE","initialState","Immutable","accountList","accountReducer","state","action","type","merge","payload","movieList","homeReducer","locales","authorizationDenied","loginFirst","authorizationExpired","loginAgain","login","loginPage","accountInfo","authorized","authorizedDate","lang","locale","persistReducer","httpErrorStatus","commonReducer","baseUrl","length","slice","AccountUrl","AUTH_INFO","ACCOUNT_INFO","defaultOptions","redux","store","getState","persist","headers","apiKey","timeout","axios","interceptors","request","use","config","Date","getTime","Promise","reject","response","status","data","message","error","window","location","href","indexOf","dispatch","console","log","url","options","resolve","params","then","res","catch","finally","service","get","method","post","put","delete","fetch","logout","accountSaga","email","callback","name","all","takeLatest","changeLocale","commonSaga","root","middlewares","sagaMiddleware","createSagaMiddleware","push","history","createHashHistory","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","persistConfig","key","storage","whitelist","stateReconciler","seamlessImmutableReconciler","transforms","seamlessImmutableTransformCreator","persistedReducer","combineReducers","router","connectRouter","account","home","common","createStore","persistor","persistStore","run","rootSaga","routes","path","component","React","lazy","exact","BlankLayout","props","children","className","MainLayout","this","style","display","justifyContent","to","Component","LanguageSwitch","onChange","value","Option","PureComponent","connect","Layout","checkPermission","pathname","updateLocaleState","setupLayout","prevProps","prevPathname","prevHttpErrorStatus","String","Helmet","titleTemplate","title","position","top","right","zIndex","withRouter","GlobalLoading","NProgress","start","done","indicator","size","Router","fallback","map","route","from","App","loading","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a49692b4.chunk.js","sourcesContent":["export const CommonType = {\n  SET_COMMON_STATE: 'SET_COMMON_STATE',\n  CHANGE_LOCALE: 'CHANGE_LOCALE',\n};\n\nexport const AccountType = {\n  SET_ACCOUNT_STATE: 'SET_ACCOUNT_STATE',\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n};\n\nexport const HomeType = {\n  SET_HOME_STATE: 'SET_HOME_STATE',\n  MOVIE_LIST: 'MOVIE_LIST',\n};\n\nexport const PersistType = {\n  SET_PERSIST_STATE: 'SET_PERSIST_STATE',\n};\n","import Immutable from 'seamless-immutable';\nimport { AccountType } from '../../constants/ActionTypes';\n\nconst initialState = Immutable({\n  accountList: null,\n});\n\nexport default function accountReducer(state = initialState, action) {\n  switch (action.type) {\n    case AccountType.SET_ACCOUNT_STATE:\n      return state.merge({ ...action.payload });\n    default:\n      return state;\n  }\n}\n","import Immutable from 'seamless-immutable';\nimport { HomeType } from '../../constants/ActionTypes';\n\nconst initialState = Immutable({\n  movieList: null,\n});\n\nexport default function homeReducer(state = initialState, action) {\n  switch (action.type) {\n    case HomeType.SET_HOME_STATE:\n      return state.merge({ ...action.payload });\n    default:\n      return state;\n  }\n}\n","const en_US = {\n  // notify\n  authorizationDenied: 'Authorization Denied',\n  loginFirst: 'Please login first',\n  authorizationExpired: 'Authorization Expired',\n  loginAgain: 'please login again',\n  // login page\n  login: 'Login',\n  loginPage: 'Login Page',\n};\n\nexport default en_US;\n","import en_US from './en-US';\nimport zh_CN from './zh-CN';\n\nconst locales = {\n  'en-US': en_US,\n  'zh-CN': zh_CN,\n};\n\nexport default locales;\n","const zh_CN = {\n  // notify\n  authorizationDenied: '验证失败',\n  loginFirst: '请先登录您的账号',\n  authorizationExpired: '授权过期',\n  loginAgain: '请重新登录',\n  // login page\n  login: '登录',\n  loginPage: '登录页面',\n};\n\nexport default zh_CN;\n","import Immutable from 'seamless-immutable';\nimport { PersistType } from '../../constants/ActionTypes';\nimport locales from '../../locales';\n\nconst defaultLang = 'en-US';\n\nconst initialState = Immutable({\n  accountInfo: null,\n  authorized: false,\n  authorizedDate: 0,\n  lang: defaultLang,\n  locale: locales[defaultLang],\n});\n\nexport default function persistReducer(state = initialState, action) {\n  switch (action.type) {\n    case PersistType.SET_PERSIST_STATE:\n      return state.merge({ ...action.payload });\n    default:\n      return state;\n  }\n}\n","import Immutable from 'seamless-immutable';\nimport { CommonType } from '../../constants/ActionTypes';\n\nconst initialState = Immutable({\n  httpErrorStatus: 0,\n});\n\nexport default function commonReducer(state = initialState, action) {\n  switch (action.type) {\n    case CommonType.SET_COMMON_STATE:\n      return state.merge({ ...action.payload });\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n// import { persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport { connectRouter } from 'connected-react-router';\nimport account from './accountReducer';\nimport home from './homeReducer';\nimport persist from './persistReducer';\nimport common from './commonReducer';\n\nexport default history =>\n  combineReducers({\n    // account: persistReducer(\n    //   {\n    //     key: 'account',\n    //     storage,\n    //     whitelist: ['info'],\n    //   },\n    //   account\n    // ),\n    router: connectRouter(history),\n    persist,\n    account,\n    home,\n    common,\n  });\n","/**\n * Enum for URLs for the API endpoints.\n */\n\nconst domain = 'https://api.vultr.com';\nlet baseUrl = '/v1';\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = domain + baseUrl;\n}\n\nif (baseUrl[baseUrl.length - 1] === '/') {\n  baseUrl = baseUrl.slice(0, -1);\n}\n\nexport const AccountUrl = {\n  AUTH_INFO: `${baseUrl}/auth/info`,\n  ACCOUNT_INFO: `${baseUrl}/account/info`,\n};\n\nexport const ResearchUrl = {\n  RESEARCH: `${baseUrl}/document/research`,\n};\n","import axios from 'axios';\nimport redux from '../redux';\nimport { AccountType, CommonType } from '../constants/ActionTypes';\n\nconst defaultOptions = () => {\n  const { store } = redux;\n  const states = store.getState();\n  const {\n    persist: { accountInfo },\n  } = states;\n  const apiKey = accountInfo ? accountInfo.apiKey : '';\n  return {\n    headers: {\n      'API-Key': apiKey,\n    },\n    timeout: 6000,\n  };\n};\n\n// Add a request interceptor\naxios.interceptors.request.use(\n  config => {\n    // Do something before request is sent\n    const { store } = redux;\n    const states = store.getState();\n    const {\n      persist: { authorizedDate },\n    } = states;\n    if (\n      authorizedDate &&\n      (new Date().getTime() - authorizedDate) / 1000 / 60 / 60 > 8 // 8 hour\n    ) {\n      const error = {\n        response: { status: 403 },\n        data: { message: 'Authorization Expired' },\n      };\n      return Promise.reject(error);\n    }\n    return config;\n  },\n  error => {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxios.interceptors.response.use(\n  response => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  },\n  error => {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    const { response } = error;\n    const { store } = redux;\n    const status = response ? response.status : -1;\n    switch (true) {\n      case status === 401:\n        if (window.location.href.indexOf('/login') === -1) {\n          store.dispatch({\n            type: AccountType.LOGOUT,\n          });\n          store.dispatch({\n            type: CommonType.SET_COMMON_STATE,\n            payload: { httpErrorStatus: status },\n          });\n        }\n        break;\n      case status === 403:\n        if (window.location.href.indexOf('/login') === -1) {\n          // this action should remove those expired login data\n          store.dispatch({\n            type: AccountType.LOGOUT,\n          });\n          store.dispatch({\n            type: CommonType.SET_COMMON_STATE,\n            payload: { httpErrorStatus: status },\n          });\n        }\n        break;\n      case status === 404:\n        console.log('The API does not exist, please contact the developers'); //eslint-disable-line\n        break;\n      case status === 500 || status === 502 || status === 503:\n        store.dispatch({\n          type: CommonType.SET_COMMON_STATE,\n          payload: { httpErrorStatus: status },\n        });\n        break;\n      default:\n        console.error(response); //eslint-disable-line\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst request = (url, options = {}) =>\n  new Promise((resolve, reject) => {\n    const params = { ...options, url };\n    axios(params)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(error => {\n        reject(error);\n      })\n      .finally(res => {\n        resolve(res);\n      });\n  });\n\nconst service = {\n  /**\n   * GET request\n   */\n  get: (url, params) =>\n    request(url, {\n      ...defaultOptions(),\n      method: 'get',\n      params,\n    }),\n\n  /**\n   * POST request\n   */\n  post: (url, data) =>\n    request(url, {\n      ...defaultOptions(),\n      method: 'post',\n      data,\n    }),\n\n  /**\n   * PUT request\n   */\n  put: (url, data) =>\n    request(url, {\n      ...defaultOptions(),\n      method: 'put',\n      data,\n    }),\n\n  /**\n   * DELETE request\n   */\n  delete: (url, params) =>\n    request(url, {\n      ...defaultOptions(),\n      method: 'delete',\n      params,\n    }),\n\n  /**\n   * Call request method using the given options\n   */\n  fetch: (url, options) =>\n    request(url, {\n      ...defaultOptions(),\n      ...options,\n    }),\n};\n\nexport default service;\n","import { all, takeLatest, put } from 'redux-saga/effects';\nimport { AccountType, PersistType } from '../../constants/ActionTypes';\nimport { AccountUrl } from '../../constants/Url';\nimport service from '../../services';\n\nexport function* login(action) {\n  const { email, apiKey, callback } = action;\n  let res = {};\n  try {\n    res = yield service.fetch(AccountUrl.AUTH_INFO, {\n      method: 'get',\n      headers: {\n        'API-Key': apiKey,\n      },\n    });\n  } catch (err) {\n    console.log(err && err.response); //eslint-disable-line\n  }\n  if (res.email === email) {\n    const authorizedDate = new Date().getTime();\n    const accountInfo = {\n      name: res.name,\n      email,\n      apiKey,\n    };\n    yield put({\n      type: PersistType.SET_PERSIST_STATE,\n      payload: { accountInfo, authorizedDate, authorized: true },\n    });\n    callback();\n  }\n}\n\nexport function* logout() {\n  yield put({\n    type: PersistType.SET_PERSIST_STATE,\n    payload: { accountInfo: null, authorized: false, authorizedDate: 0 },\n  });\n}\n\nexport default function* accountSaga() {\n  yield all([\n    // takeEvery(actions.REGISTER, REGISTER),\n    takeLatest(AccountType.LOGIN, login),\n    takeLatest(AccountType.LOGOUT, logout),\n  ]);\n}\n","import { all, takeLatest, put } from 'redux-saga/effects';\nimport { CommonType, PersistType } from '../../constants/ActionTypes';\nimport locales from '../../locales';\n\nexport function* changeLocale(action) {\n  const { lang } = action;\n  yield put({\n    type: PersistType.SET_PERSIST_STATE,\n    payload: { lang, locale: locales[lang] || locales['en-US'] },\n  });\n}\n\nexport default function* commonSaga() {\n  yield all([takeLatest(CommonType.CHANGE_LOCALE, changeLocale)]);\n}\n","import { all } from 'redux-saga/effects';\nimport accountSaga from './accountSaga';\nimport commonSaga from './commonSaga';\n\nexport default function* root() {\n  yield all([accountSaga(), commonSaga()]);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n// import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport {\n  seamlessImmutableReconciler,\n  seamlessImmutableTransformCreator,\n} from 'redux-persist-seamless-immutable';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\n// Add other middlewares\nconst middlewares = [];\n\n// --- Add saga ---\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n// --- Add saga ---\n\n// --- Add router to redux ---\nexport const history = createHashHistory(); // use one of [createBrowserHistory, createHashHistory]\nmiddlewares.push(routerMiddleware(history));\n// --- Add router to redux ---\n\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\n// Add other enhancers\nconst enhancers = [middlewareEnhancer];\n\n// compose with redux dev tools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  //   stateReconciler: autoMergeLevel2,\n  whitelist: ['persist'],\n  stateReconciler: seamlessImmutableReconciler,\n  transforms: [seamlessImmutableTransformCreator({})],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst store = createStore(persistedReducer, composedEnhancers);\n\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default { store, persistor };\n","import React from 'react';\n\nconst routes = [\n  {\n    path: '/login',\n    component: React.lazy(() => import('../pages/Login/Login')),\n    exact: true,\n  },\n  {\n    path: '/projects',\n    component: React.lazy(() => import('../pages/Projects/Projects')),\n    exact: true,\n  },\n  {\n    path: '/documents',\n    component: React.lazy(() => import('../pages/Documents/Documents')),\n    exact: true,\n  },\n  {\n    path: '/jobAdmin',\n    component: React.lazy(() => import('../pages/JobAdmin/JobAdmin')),\n    exact: true,\n  },\n  {\n    path: '/userManagement',\n    component: React.lazy(() =>\n      import('../pages/UserManagement/UserManagement')\n    ),\n    exact: true,\n  },\n  {\n    path: '/404',\n    component: React.lazy(() => import('../pages/Errors/404')),\n    exact: true,\n  },\n  {\n    path: '/500',\n    component: React.lazy(() => import('../pages/Errors/500')),\n    exact: true,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BlankLayout = props => {\n  const { children } = props;\n  return <div className=\"page blank-layout\">{children}</div>;\n};\n\nBlankLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default BlankLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nclass MainLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"page main-layout\">\n        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n          <NavLink to=\"/login\">login</NavLink>\n          <NavLink to=\"/projects\">projects</NavLink>\n          <NavLink to=\"/documents\">documents</NavLink>\n          <NavLink to=\"/jobAdmin\">jobAdmin</NavLink>\n          <NavLink to=\"/userManagement\">userManagement</NavLink>\n        </div>\n        {children}\n      </div>\n    );\n  }\n}\n\nMainLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport { Select, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CommonType } from '../../constants/ActionTypes';\nimport './LanguageSwitch.scss';\n\nclass LanguageSwitch extends React.PureComponent {\n  onChange = value => {\n    const { dispatch } = this.props;\n    dispatch({\n      type: CommonType.CHANGE_LOCALE,\n      lang: value,\n    });\n  };\n\n  render() {\n    const {\n      persist: { lang },\n    } = this.props;\n    return (\n      <div className=\"languageSwitch\">\n        <Icon className=\"icon\" type=\"global\" />\n        <Select value={lang} onChange={this.onChange}>\n          <Select.Option value=\"en-US\">English</Select.Option>\n          <Select.Option value=\"zh-CN\">简体中文</Select.Option>\n        </Select>\n      </div>\n    );\n  }\n}\n\nLanguageSwitch.propTypes = {\n  dispatch: PropTypes.func,\n  persist: PropTypes.shape(),\n};\n\nexport default connect(({ persist }) => ({ persist }))(LanguageSwitch);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport BlankLayout from './BlankLayout';\nimport MainLayout from './MainLayout';\nimport { CommonType } from '../constants/ActionTypes';\nimport LanguageSwitch from '../components/LanguageSwitch/LanguageSwitch';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.updateLocaleState();\n    this.checkPermission();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      router: {\n        location: { pathname },\n      },\n      common: { httpErrorStatus },\n      history: { push },\n    } = this.props;\n    const {\n      router: {\n        location: { pathname: prevPathname },\n      },\n      common: { httpErrorStatus: prevHttpErrorStatus },\n    } = prevProps;\n    if (prevPathname !== pathname) {\n      this.checkPermission();\n    }\n    if (!prevHttpErrorStatus && httpErrorStatus) {\n      if (httpErrorStatus === 401 || httpErrorStatus === 403) {\n        push('/login');\n      } else if (String(httpErrorStatus).indexOf('50') === 0) {\n        push('/500');\n      }\n    }\n  }\n\n  checkPermission = () => {\n    const {\n      persist: { authorized },\n      history: {\n        location: { pathname },\n        push,\n      },\n    } = this.props;\n    if (pathname === '/login' && authorized) {\n      push('/projects');\n    }\n    if (\n      pathname !== '/login' &&\n      pathname !== '/500' &&\n      pathname !== '/404' &&\n      !authorized\n    ) {\n      push('/login');\n    }\n  };\n\n  updateLocaleState = () => {\n    const {\n      dispatch,\n      persist: { lang },\n    } = this.props;\n    dispatch({\n      type: CommonType.CHANGE_LOCALE,\n      lang,\n    });\n  };\n\n  setupLayout = () => {\n    const {\n      persist: { authorized },\n      children,\n    } = this.props;\n    if (authorized) {\n      return <MainLayout>{children}</MainLayout>;\n    } else {\n      return <BlankLayout>{children}</BlankLayout>;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Helmet\n          titleTemplate=\"%s - Customized Vultr\"\n          title=\"Customized Vultr\"\n        />\n        <div style={{ position: 'fixed', top: 16, right: 48, zIndex: 99 }}>\n          <LanguageSwitch />\n        </div>\n        {this.setupLayout()}\n      </>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node,\n  dispatch: PropTypes.func,\n  persist: PropTypes.shape(),\n  history: PropTypes.shape(),\n  router: PropTypes.shape(),\n  common: PropTypes.shape(),\n};\n\nexport default withRouter(\n  connect(({ persist, router, common }) => ({ persist, router, common }))(\n    Layout\n  )\n);\n","import React from 'react';\nimport { Spin, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport NProgress from 'nprogress';\n// import PropTypes from 'prop-types';\n// import { CommonType } from '../../constants/ActionTypes';\nimport './GlobalLoading.scss';\n\nclass GlobalLoading extends React.PureComponent {\n  componentDidMount() {\n    NProgress.start();\n  }\n\n  componentWillUnmount() {\n    NProgress.done();\n  }\n\n  render() {\n    const indicator = <Icon type=\"loading\" />;\n    return (\n      <div className=\"globalLoading\">\n        <Spin indicator={indicator} size=\"large\" />\n      </div>\n    );\n  }\n}\n\nGlobalLoading.propTypes = {};\n\nexport default connect(({ persist }) => ({ persist }))(GlobalLoading);\n","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport routes from './routesMap';\nimport Layout from '../layouts';\nimport GlobalLoading from '../components/GlobalLoading/GlobalLoading';\nimport { history } from '../redux';\n\nclass Router extends React.PureComponent {\n  render() {\n    return (\n      <ConnectedRouter history={history}>\n        <Suspense fallback={<GlobalLoading />}>\n          <Layout>\n            <Switch>\n              {routes.map(route => (\n                <Route\n                  path={route.path}\n                  component={route.component}\n                  key={route.path}\n                  exact={route.exact}\n                />\n              ))}\n              <Redirect from=\"/\" exact to=\"/login\" />\n              <Redirect from=\"/**\" to=\"/404\" />\n            </Switch>\n          </Layout>\n        </Suspense>\n      </ConnectedRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport redux from './redux';\nimport './assets/styles/App.scss';\nimport Routes from './routes';\n\nconst { store, persistor } = redux;\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"App\">\n          <Routes />\n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// These must be the first lines in src/index.js\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}